import streamlit as st
import re

# Funci√≥n para verificar la fortaleza de la contrase√±a
def evaluar_contrase√±a(password):
    """
    Eval√∫a la fortaleza de una contrase√±a seg√∫n los siguientes criterios:
    - Al menos 8 caracteres.
    - Al menos una letra may√∫scula.
    - Al menos una letra min√∫scula.
    - Al menos un n√∫mero.
    - Al menos un car√°cter especial.
    
    Par√°metros:
        password (str): La contrase√±a que se va a evaluar.
    
    Retorna:
        dict: Un diccionario con el estado de los criterios y sugerencias.
    """
    criterios = {
        'Longitud m√≠nima (8 caracteres)': len(password) >= 8,
        'Contiene may√∫sculas': re.search(r'[A-Z]', password) is not None,
        'Contiene min√∫sculas': re.search(r'[a-z]', password) is not None,
        'Contiene n√∫meros': re.search(r'[0-9]', password) is not None,
        'Contiene caracteres especiales': re.search(r'[!@#$%^&*(),.?":{}|<>]', password) is not None
    }

    # Sugerencias basadas en los criterios que no se cumplan
    sugerencias = []
    if len(password) < 8:
        sugerencias.append('La contrase√±a debe tener al menos 8 caracteres.')
    if not re.search(r'[A-Z]', password):
        sugerencias.append('La contrase√±a debe contener al menos una letra may√∫scula.')
    if not re.search(r'[a-z]', password):
        sugerencias.append('La contrase√±a debe contener al menos una letra min√∫scula.')
    if not re.search(r'[0-9]', password):
        sugerencias.append('La contrase√±a debe contener al menos un n√∫mero.')
    if not re.search(r'[!@#$%^&*(),.?":{}|<>]', password):
        sugerencias.append('La contrase√±a debe contener al menos un car√°cter especial.')

    return criterios, sugerencias

# Interfaz de usuario con Streamlit
def main():
    st.title('Evaluador de Fortaleza de Contrase√±a')
    st.write('Ingrese su contrase√±a para evaluar su fortaleza.')
    
    # Entrada de contrase√±a
    password = st.text_input('Contrase√±a:', type='password')

    if password:
        # Evaluar la contrase√±a
        criterios, sugerencias = evaluar_contrase√±a(password)
        
        # Mostrar resultados
        st.subheader('Criterios de Seguridad:')
        for criterio, valido in criterios.items():
            if valido:
                st.markdown(f'‚úîÔ∏è **{criterio}**')
            else:
                st.markdown(f'‚ùå **{criterio}**')

        # Mostrar sugerencias
        if sugerencias:
            st.subheader('Sugerencias para mejorar la contrase√±a:')
            for sugerencia in sugerencias:
                st.markdown(f'- {sugerencia}')
        else:
            st.markdown('üéâ ¬°Tu contrase√±a es segura!')

    # Informaci√≥n adicional
    st.markdown("---")
    st.write("Programado por Miguel Angel Villarraga Franco")

# Ejecutar la aplicaci√≥n
if __name__ == "__main__":
    main()
